{"id":"node_modules/react-bulma-components/cjs/components/form/components/field/field.js","dependencies":[{"name":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/bernardi/Documents/paga_leve/paga-leve-react/package.json","includedInParent":true,"mtime":1623542362517},{"name":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/package.json","includedInParent":true,"mtime":1623528741300},{"name":"react","loc":{"line":10,"column":44},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react/index.js"},{"name":"prop-types","loc":{"line":12,"column":48},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/prop-types/index.js"},{"name":"classnames","loc":{"line":14,"column":50},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/classnames/index.js"},{"name":"./field-label","loc":{"line":16,"column":49},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field-label.js"},{"name":"./field-body","loc":{"line":18,"column":48},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field-body.js"},{"name":"../../../element","loc":{"line":20,"column":46},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/element/index.js"},{"name":"../../../../services/normalizer","loc":{"line":22,"column":26},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/services/normalizer.js"},{"name":"./context","loc":{"line":24,"column":47},"parent":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/field.js","resolved":"/home/bernardi/Documents/paga_leve/paga-leve-react/node_modules/react-bulma-components/cjs/components/form/components/field/context.js"}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames2 = _interopRequireDefault(require(\"classnames\"));\n\nvar _fieldLabel = _interopRequireDefault(require(\"./field-label\"));\n\nvar _fieldBody = _interopRequireDefault(require(\"./field-body\"));\n\nvar _element = _interopRequireDefault(require(\"../../../element\"));\n\nvar _normalizer = require(\"../../../../services/normalizer\");\n\nvar _context = _interopRequireWildcard(require(\"./context\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar Field = function Field(_ref) {\n  var _classnames;\n\n  var className = _ref.className,\n      align = _ref.align,\n      multiline = _ref.multiline,\n      horizontal = _ref.horizontal,\n      kind = _ref.kind,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"className\", \"align\", \"multiline\", \"horizontal\", \"kind\", \"size\"]);\n\n  var context = (0, _context[\"default\"])();\n  var k = null;\n\n  if (kind === 'addons') {\n    k = 'has-addons';\n  } else if (kind === 'group') {\n    k = 'is-grouped';\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_context.FieldContext.Provider, {\n    value: {\n      size: size || context.size\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_element[\"default\"], _extends({}, props, {\n    className: (0, _classnames2[\"default\"])('field', className, (_classnames = {}, _defineProperty(_classnames, \"\".concat(k), k), _defineProperty(_classnames, \"\".concat(k, \"-\").concat((0, _normalizer.normalizeAlign)(align)), k === 'is-grouped' && align), _defineProperty(_classnames, \"\".concat(k, \"-multiline\"), k === 'is-grouped' && multiline), _defineProperty(_classnames, 'is-horizontal', horizontal), _classnames))\n  })));\n};\n\nField.Label = _fieldLabel[\"default\"];\nField.Body = _fieldBody[\"default\"];\nField.defaultProps = {};\nvar _default = Field;\nexports[\"default\"] = _default;\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../../../src/components/form/components/field/field.js"],"names":["Field","className","align","multiline","horizontal","kind","size","props","context","k","Label","FieldLabel","Body","FieldBody","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAQR;AAAA;;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,OAAO,GAAG,0BAAhB;AACA,MAAIC,CAAC,GAAG,IAAR;;AAEA,MAAIJ,IAAI,KAAK,QAAb,EAAuB;AACrBI,IAAAA,CAAC,GAAG,YAAJ;AACD,GAFD,MAEO,IAAIJ,IAAI,KAAK,OAAb,EAAsB;AAC3BI,IAAAA,CAAC,GAAG,YAAJ;AACD;;AAED,sBACE,gCAAC,qBAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAI,EAAEA,IAAI,IAAIE,OAAO,CAACF;AAAxB;AAA9B,kBACE,gCAAC,mBAAD,eACMC,KADN;AAEE,IAAA,SAAS,EAAE,6BAAW,OAAX,EAAoBN,SAApB,4DACLQ,CADK,GACCA,CADD,0CAELA,CAFK,cAEA,gCAAeP,KAAf,CAFA,GAE0BO,CAAC,KAAK,YAAN,IAAsBP,KAFhD,0CAGLO,CAHK,iBAGWA,CAAC,KAAK,YAAN,IAAsBN,SAHjC,gCAIT,eAJS,EAIQC,UAJR;AAFb,KADF,CADF;AAaD,CA/BD;;AAiCAJ,KAAK,CAACU,KAAN,GAAcC,sBAAd;AAEAX,KAAK,CAACY,IAAN,GAAaC,qBAAb;AA6BAb,KAAK,CAACc,YAAN,GAAqB,EAArB;eAEed,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport FieldLabel from './field-label';\nimport FieldBody from './field-body';\n\nimport Element from '../../../element';\nimport { normalizeAlign } from '../../../../services/normalizer';\nimport useFieldContext, { FieldContext } from './context';\n\nconst Field = ({\n  className,\n  align,\n  multiline,\n  horizontal,\n  kind,\n  size,\n  ...props\n}) => {\n  const context = useFieldContext();\n  let k = null;\n\n  if (kind === 'addons') {\n    k = 'has-addons';\n  } else if (kind === 'group') {\n    k = 'is-grouped';\n  }\n\n  return (\n    <FieldContext.Provider value={{ size: size || context.size }}>\n      <Element\n        {...props}\n        className={classnames('field', className, {\n          [`${k}`]: k,\n          [`${k}-${normalizeAlign(align)}`]: k === 'is-grouped' && align,\n          [`${k}-multiline`]: k === 'is-grouped' && multiline,\n          'is-horizontal': horizontal,\n        })}\n      />\n    </FieldContext.Provider>\n  );\n};\n\nField.Label = FieldLabel;\n\nField.Body = FieldBody;\n\nField.propTypes = {\n  /**\n   * When this prop is set this value will be used as size for `Form.Label` `Form.Input`, `Form.Textarea`, `Form.Select`, `Button` and `Icon` inside the field\n   */\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large']),\n    PropTypes.string,\n  ]),\n  /**\n   * `addon`: Will group together the controls without gap between\n   * `group`: Will group together the controls with evenly seperation between\n   */\n  kind: PropTypes.oneOf(['addons', 'group']),\n  /**\n   * Working together with `kind=\"group\"` to align all controls\n   */\n  align: PropTypes.oneOf(['center', 'right']),\n  /**\n   * When `kind=\"group\"` will wrap to next line if the control do not fit on the current line\n   */\n  multiline: PropTypes.bool,\n  /**\n   * To create a 2 columns form, See `Form.Field.Label` and `Form.Field.Body` for more details\n   */\n  horizontal: PropTypes.bool,\n};\n\nField.defaultProps = {};\n\nexport default Field;\n"],"file":"field.js"}},"error":null,"hash":"17559c7c31c7af78d8454efaeba50356","cacheData":{"env":{}}}